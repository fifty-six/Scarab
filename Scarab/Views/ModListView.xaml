<views:View x:TypeArguments="viewModels:ModListViewModel"
            xmlns="https://github.com/avaloniaui"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:sys="clr-namespace:System;assembly=netstandard"
            xmlns:models="clr-namespace:Scarab.Models"
            xmlns:viewModels="clr-namespace:Scarab.ViewModels"
            xmlns:views="clr-namespace:Scarab.Views"
            xmlns:mock="clr-namespace:Scarab.Mock;assembly=Scarab"
            xmlns:util="clr-namespace:Scarab.Util"
            xmlns:ext="clr-namespace:Scarab.Extensions"
            mc:Ignorable="d" d:DesignWidth="600" d:DesignHeight="550"
            x:Class="Scarab.Views.ModListView"
            d:DataContext="{x:Static mock:MockViewModel.DesignInstance}"
            Name="UserControl">
    <DockPanel>
        <!-- Sidebar -->
        <Menu DockPanel.Dock="Left" HorizontalAlignment="Left">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel VerticalAlignment="Stretch" Dock="Top" />
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

            <Menu.Styles>
                <Style Selector="MenuItem:separator">
                    <Setter Property="Template">
                        <ControlTemplate>
                            <Separator Background="#a9a9a9" Margin="0,1,0,1" Height="1" />
                        </ControlTemplate>
                    </Setter>
                </Style>

                <Style Selector="MenuItem">
                    <Setter Property="Padding" Value="6 8" />
                </Style>
            </Menu.Styles>

            <MenuItem Header="{ext:Localize XAML_ModsFilter_All}" Command="{Binding SelectAll}" DockPanel.Dock="Top" />
            <MenuItem Header="-" DockPanel.Dock="Top" />
            <MenuItem Header="{ext:Localize XAML_ModsFilter_Installed}" Command="{Binding SelectInstalled}" DockPanel.Dock="Top" />
            <MenuItem Header="-" DockPanel.Dock="Top" />
            <MenuItem Header="{ext:Localize XAML_ModsFilter_Enabled}" Command="{Binding SelectEnabled}" DockPanel.Dock="Top" />
            <MenuItem Header="-" DockPanel.Dock="Top" />
            <MenuItem Header="{ext:Localize XAML_ModsFilter_OutOfDate}" Command="{Binding SelectUnupdated}" DockPanel.Dock="Top" />

            <MenuItem
                Command="{Binding ChangePath}"
                Header="{ext:Localize XAML_ChangPath}"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Bottom" />
            <MenuItem
                Command="{Binding OpenModsDirectory}"
                Header="{ext:Localize XAML_OpenMods}"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Bottom" />
            <MenuItem
                Command="{Binding ToggleApi}"
                Header="{Binding ApiButtonText}"
                IsEnabled="{Binding EnableApiButton}"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Bottom" />
            <MenuItem
                Command="{Binding UpdateApi}"
                Header="{ext:Localize XAML_UpdateAPI}"
                IsEnabled="{Binding ApiOutOfDate}"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Bottom" />
            <MenuItem
                Command="{Binding Donate}"
                Header="{ext:Localize XAML_Donate}"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Bottom" />
        </Menu>

        <Separator
            DockPanel.Dock="Left"
            Background="#a9a9a9"
            Width="1" />

        <ProgressBar
            DockPanel.Dock="Bottom"

            MaxHeight="8"
            MinHeight="8"

            Name="Bar"

            IsVisible="{Binding ProgressBarVisible}"

            IsIndeterminate="{Binding ProgressBarIndeterminate}"

            Minimum="0"
            Maximum="100"
            Value="{Binding Progress}" />

        <TextBox
            x:Name="Search"
            Name="Search"
            Watermark="{ext:Localize XAML_SearchMark}"
            DockPanel.Dock="Top"
            BorderThickness="0"
            Margin="6 6"
            Text="{Binding Search}" />

        <Separator
            DockPanel.Dock="Top"
            Height="1"
            Background="#a9a9a9" />

        <ScrollViewer>
            <ItemsRepeater Items="{Binding FilteredItems}" ElementClearing="PrepareElement" VerticalCacheLength="20">
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate DataType="models:ModItem">
                        <Grid Margin="8 12 12 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MaxWidth="260" />
                                <ColumnDefinition Width="*" MaxWidth="260" />
                                <ColumnDefinition Width="*" MaxWidth="260" />
                                <ColumnDefinition Width="*" MaxWidth="100" />
                            </Grid.ColumnDefinitions>
                            
                            <!-- 
                                We register a phantom textblock to use as the width for the one inside the expander header 
                                The margin accounts for where the arrow would be if this was in the expander              
                                The hit test visibility allows us to click through into the expander
                            -->
                            <TextBlock 
                                x:Name="phantom" 
                                Margin="20 3 0 0" 
                                Grid.Column="0" 
                                TextWrapping="Wrap" 
                                IsHitTestVisible="False"
                            />
                            
                            <Expander Grid.Column="0" Grid.ColumnSpan="4">
                                <Expander.Header>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap">
                                        <TextBlock.Resources>
                                            <sys:Double x:Key="decrement">-20.0</sys:Double>
                                        </TextBlock.Resources>

                                        <!-- 
                                            Set the width to that of our phantom minus a bit to
                                            make sure it doesn't get too close to the slider 
                                            
                                            We need the width here as inside the expander the contents
                                            don't follow the grid so it would overflow the column
                                        -->
                                        <TextBlock.Width>
                                            <MultiBinding Converter="{x:Static util:AddConverter.Instance}">
                                                <Binding Source="{StaticResource decrement}"/>
                                                <Binding ElementName="phantom" Path="Bounds.Width"/>
                                            </MultiBinding>
                                        </TextBlock.Width>
                                    </TextBlock>
                                </Expander.Header>
                                
                                <StackPanel Margin="12 0 0 0">
                                    <TextBlock Text="{Binding Description}" TextWrapping="Wrap" Margin="0 4 4 0"/>

                                    <TextBlock Text="{ext:Localize XAML_Repository}" FontWeight="Bold" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock 
                                            Text="{Binding Repository}" 
                                            TextWrapping="Wrap" 
                                            Margin="0 4 4 0" 
                                            PointerReleased="RepositoryTextClick"
                                            Foreground="{DynamicResource Highlight}"
                                        >
                                            <TextBlock.Resources>
                                                <SolidColorBrush x:Key="Highlight" Color="#1ebbff"/>
                                            </TextBlock.Resources>
                                        </TextBlock>
                                    </StackPanel>

                                    <TextBlock Text="{ext:Localize XAML_Version}" FontWeight="Bold" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding VersionText}" />
                                        <TextBlock
                                            Text="{Binding UpdateText}"
                                            IsVisible="{Binding UpdateAvailable}"
                                            Foreground="{DynamicResource Highlight}" 
                                            Margin="4 0 0 0" 
                                            FontWeight="Bold"
                                        >
                                            <TextBlock.Resources>
                                                <SolidColorBrush x:Key="Highlight" Color="#f49107" />
                                            </TextBlock.Resources>
                                        </TextBlock>
                                    </StackPanel>

                                    <TextBlock Text="{ext:Localize XAML_Dependencies}" FontWeight="Bold" IsVisible="{Binding HasDependencies}" />
                                    <TextBlock Text="{Binding DependenciesDesc}" IsVisible="{Binding HasDependencies}" />
                                </StackPanel>
                            </Expander>

                            <ToggleSwitch
                                Grid.Column = "1"
                                Margin = "0 -2 0 0"
                                VerticalAlignment="Top"
                                CommandParameter="{Binding .}"
                                Command="{Binding $parent[views:ModListView].DataContext.OnEnable}"
                                IsChecked="{Binding EnabledIsChecked}"
                                IsEnabled = "{Binding Installed}"
                                VerticalContentAlignment="Center"
                            />
                            
                            <Button 
                                Grid.Column="2"
                                MaxWidth="60"
                                CommandParameter="{Binding .}"
                                Content="{Binding InstallText}"
                                IsEnabled="{Binding !Installing}"
                                Command="{Binding $parent[views:ModListView].DataContext.OnInstall}"
                                VerticalAlignment="Top"
                            />

                            <Grid 
                                Grid.Column="3" 
                                ColumnDefinitions="Auto,*" 
                                IsVisible="{Binding UpdateAvailable}"
                                VerticalAlignment="Top"
                            >
                                <Button
                                    MaxHeight="18"
                                    MaxWidth="18"
                                    Margin="0 4 0 0"
                                    Background="Transparent"
                                    BorderBrush="{DynamicResource ThemeBorderMidBrush}"
                                    Command="{Binding $parent[views:ModListView].DataContext.OnUpdate}"
                                    CommandParameter="{Binding .}"
                                >
                                    <Image 
                                        Source="avares://Scarab/Assets/update.png" 
                                        Height="12" Width="12" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center" 
                                    />
                                </Button>
                                
                                <ContentPresenter Grid.Column="1" Margin="4,4,0,0" VerticalAlignment="Center" Content="Update"/>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </ScrollViewer>
    </DockPanel>
</views:View>